<Window x:Class="ScanningAfter.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ScanningAfter"
        mc:Ignorable="d"
        Title="MainWindow"  Height="500" Width="600" MouseLeftButtonDown="Window_MouseLeftButtonDown" Background="#1c2838" Loaded="Window_Loaded" Closing="Window_Closing" WindowStartupLocation="CenterScreen" AllowsTransparency="True" WindowStyle="None">
    <Window.Resources>
        <LinearGradientBrush x:Key="ButtonNormalBackgroundFill" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFFFFFFF" Offset="0"/>
            <GradientStop Color="#FFF0F0EA" Offset="0.9"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ButtonBorder" Color="#FF003C74"/>
        <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackgroundFill}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonBorder}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnChecked1">
                                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="path">
                                    <EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="40,0,0,0"/>
                                </ThicknessAnimationUsingKeyFrames>
                                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="path1">
                                    <EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="40,0,0,0"/>
                                </ThicknessAnimationUsingKeyFrames>
                                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="path2">
                                    <EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="40,0,0,0"/>
                                </ThicknessAnimationUsingKeyFrames>
                                <StringAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Text)" Storyboard.TargetName="displayText">
                                    <DiscreteStringKeyFrame KeyTime="0" Value="OFF"/>
                                </StringAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnUnchecked1">
                                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="path">
                                    <EasingThicknessKeyFrame KeyTime="0" Value="40,0,0,0"/>
                                    <EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="0"/>
                                </ThicknessAnimationUsingKeyFrames>
                                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="path1">
                                    <EasingThicknessKeyFrame KeyTime="0" Value="40,0,0,0"/>
                                    <EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="0"/>
                                </ThicknessAnimationUsingKeyFrames>
                                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="path2">
                                    <EasingThicknessKeyFrame KeyTime="0" Value="40,0,0,0"/>
                                    <EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="0"/>
                                </ThicknessAnimationUsingKeyFrames>
                                <StringAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Text)" Storyboard.TargetName="displayText">
                                    <DiscreteStringKeyFrame KeyTime="0" Value="ON"/>
                                </StringAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="displayText">
                                    <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                    <EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FF63FA00"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Border CornerRadius="10" Background="#FF3B3939" Width="60" Height="20">
                            <Grid>
                                <TextBlock x:Name="displayText" Text="ON" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                                <Path x:Name="path2" Fill="Black">
                                    <Path.Data>
                                        <GeometryGroup>
                                            <GeometryGroup.Children>
                                                <EllipseGeometry Center="10,10" RadiusX="8.5" RadiusY="8.5"></EllipseGeometry>
                                            </GeometryGroup.Children>
                                        </GeometryGroup>
                                    </Path.Data>
                                </Path>
                                <Path x:Name="path1" Fill="#FF818080">
                                    <Path.Data>
                                        <GeometryGroup>
                                            <GeometryGroup.Children>
                                                <EllipseGeometry Center="10,10" RadiusX="7" RadiusY="7"></EllipseGeometry>
                                            </GeometryGroup.Children>
                                        </GeometryGroup>
                                    </Path.Data>
                                </Path>
                                <Path x:Name="path">
                                    <Path.Fill>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF807F7F" Offset="0"/>
                                            <GradientStop Color="#FF373636" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Path.Fill>
                                    <Path.Data>
                                        <GeometryGroup>
                                            <GeometryGroup.Children>
                                                <EllipseGeometry Center="10,10" RadiusX="8" RadiusY="8"></EllipseGeometry>
                                            </GeometryGroup.Children>
                                        </GeometryGroup>
                                    </Path.Data>
                                </Path>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="ToggleButton.Checked">
                                <BeginStoryboard Storyboard="{StaticResource OnChecked1}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                                <BeginStoryboard x:Name="OnUnchecked1_BeginStoryboard" Storyboard="{StaticResource OnUnchecked1}"/>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="BtnStyle2">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate  TargetType="Button">
                        <Grid  Background="Transparent">
                            <ContentPresenter x:Name="cp1" Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center" RecognizesAccessKey="True"/>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="cp1" Property="Content">
                                    <Setter.Value>
                                        <Image Source="Images/图层-0@2x.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="cp1" Property="Content">
                                    <Setter.Value>
                                        <Image Source="Images/图层-0@2x.png"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="closeBtn">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="closeBtnE">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="90.435"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="closeBtnL">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="closeBtnE">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-89.608"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="xl">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="zxhBtn">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="5.328"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="zxhBtn">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Style TargetType="{x:Type Button}" x:Key="close">
            <Setter Property="Width" Value="12"/>
            <Setter Property="Height" Value="11"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Opacity" Value="0.2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Opacity" Value="1"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Window.Triggers>
        <EventTrigger RoutedEvent="UIElement.MouseEnter" SourceName="closeBtnE">
            <BeginStoryboard Storyboard="{StaticResource closeBtn}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.MouseLeave" SourceName="closeBtnE">
            <BeginStoryboard Storyboard="{StaticResource closeBtnL}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.MouseEnter" SourceName="zxhBtn">
            <BeginStoryboard x:Name="xl_BeginStoryboard" Storyboard="{StaticResource xl}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.MouseLeave" SourceName="zxhBtn">
            <RemoveStoryboard BeginStoryboardName="xl_BeginStoryboard"/>
        </EventTrigger>
    </Window.Triggers>
    <Grid>
        <StackPanel>
            <!--右上角关闭缩小按钮-->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="10">
                <Button Name="zxhBtn" Style="{StaticResource close}" Click="Button_Click_1" RenderTransformOrigin="0.5,0.5">
                    <Button.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Button.RenderTransform>
                    <Button.Background>
                        <ImageBrush ImageSource="Images/mi.png"/>
                    </Button.Background>
                </Button>
                <Button Name="closeBtnE" Style="{StaticResource close}" Margin="10 0 0 0" Click="Button_Click" RenderTransformOrigin="0.5,0.5">
                    <Button.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Button.RenderTransform>
                    <Button.Background>
                        <ImageBrush ImageSource="Images/close.png"/>
                    </Button.Background>
                </Button>
            </StackPanel>
        </StackPanel>
        <StackPanel HorizontalAlignment="Right" x:Name="Sptog" VerticalAlignment="Top" Height="30" Width="200" Orientation="Horizontal" Margin="0,38,-13,0">
            <Label Width="100" Height="40" x:Name="lotOn" Content="批量开关" FontSize="20" Foreground="#e7e7e7"/>
            <ToggleButton KeyDown="togbutton_KeyDown" Focusable="False" x:Name="togbutton" Style="{StaticResource ToggleButtonStyle1}" Click="togbutton_Click_1" Height="30" Width="80"/>
        </StackPanel>
        <TextBlock x:Name="displayInfo" Width="400" Height="40" Text="" TextAlignment="Center" FontSize="18" Foreground="#fc4a64" Margin="9,0,21,460"/>
        <Button x:Name="isShou" Style="{StaticResource MyWpfButton}" Focusable="False" Content="切换为手动输入" Width="200" FontSize="18" Foreground="White" Height="50" Click="isShou_Click" Margin="100,46,100,404" />
        <TextBox x:Name="Content" IsEnabled="False"  Height="30" TextChanged="Content_TextChanged" Width="300"  FontSize="18" TextAlignment="Center"/>
        <!--<StackPanel HorizontalAlignment="Left" VerticalAlignment="Top" Height="60" Width="200" Orientation="Horizontal" Margin="0,30,-13,0">
            <Ellipse Width="60" x:Name="testEli" Height="60" Fill="#fc4a64" Stroke="Transparent" />
            <Label x:Name="isco" Width="100" Height="40" Content="连接失败" Margin="20,0,0,0" FontSize="20" Foreground="#fc4a64"/>
        </StackPanel>-->
        <Grid x:Name="GridShoudo" Visibility="Collapsed" Margin="0,40,0,-40">
            <Label Width="120" x:Name="ltioama" Height="35" Content="请输入条码" FontSize="20" Foreground="#e7e7e7" Grid.Row="0" Margin="94,98,386,367"/>
            <TextBox x:Name="tiaoma" Height="30" FontSize="20" Width="200" Margin="260,103,140,367"/>
            <Label Width="120" x:Name="lshul" Height="35" Content="请输入数量" FontSize="20" Foreground="#e7e7e7" Grid.Row="0" Margin="94,177,386,288"/>
            <TextBox x:Name="shul"  Text="1" FontSize="20" Height="30" Width="200" KeyDown="zongliang_KeyDown" TextChanged="zongliang_TextChanged" Margin="260,182,140,288" />
            <Button x:Name="submit" Content="确认" Focusable="False" Width="100" Style="{StaticResource MyWpfButton}" FontSize="18" Foreground="White" Height="50" Click="submit_Click" Margin="238,272,262,178"/>
        </Grid>
        <Grid HorizontalAlignment="Left" x:Name="stp" Visibility="Collapsed" VerticalAlignment="Center" Height="322" Width="600" Margin="0,101,0,77">
            <TextBox x:Name="productname" IsEnabled="False" Height="20" Width="100" Margin="311,50,189,252"/>
            <TextBox x:Name="producttiaoma" IsEnabled="False" Height="20" Width="100" Margin="311,93,189,209"/>
            <Label Content="批量入" x:Name="pl"  Width="100" Foreground="#e7e7e7" FontSize="25" Height="50" Margin="241,0,259,272"/>
            <Label Content="商品名称" Width="120" Foreground="#e7e7e7" FontSize="25" Height="50" Margin="163,38,317,234"/>
            <Label Content="商品条码" Width="120" Foreground="#e7e7e7" FontSize="25" Height="50" Margin="163,81,317,191"/>
            <Label Content="数      量" Width="120" Foreground="#e7e7e7" FontSize="25" Height="50" Margin="163,161,317,111"/>
            <TextBox x:Name="name" Text="1" Padding="0" Height="20" Width="100" KeyDown="zongliang_KeyDown" TextChanged="zongliang_TextChanged" Margin="311,178,189,124"/>
            <Label x:Name="lzl" Content="总      量" Width="120" Visibility="Visible" Foreground="#e7e7e7" FontSize="25" Height="50" Margin="163,120,317,152"/>
            <Button IsEnabled="False" x:Name="mybtn" Focusable="False" Content="提交" Width="200" Style="{StaticResource MyWpfButton}" FontSize="20" Foreground="White" Height="30" Click="mybtn_Click" Margin="189,219,211,73"/>
            <TextBox x:Name="zongl" IsEnabled="False" Height="20" Width="100" Margin="311,133,189,169"/>
        </Grid>
        <Button Content="入库" Focusable="False"  Width="100" Foreground="#e7e7e7" FontSize="17" Height="50" Background="#474955" x:Name="come" Click="come_Click" Margin="119,400,381,50"/>
        <Button Content="出库" Focusable="False"  Width="100" Height="50" FontSize="17" Foreground="#e7e7e7" x:Name="go" Background="#474955" Click="go_Click" Margin="344,400,156,50" />
    </Grid>
</Window>
